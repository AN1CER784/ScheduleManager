services:
  db:
    image: postgres:17.5-alpine3.21
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:8.0-alpine3.21
    restart: always
    command: redis-server --save 120 1 --loglevel warning
    volumes:
      - ../cache:/data

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: >
      /bin/bash -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn ScheduleManager.wsgi:application --bind 0.0.0.0:8000 --timeout 300 --log-level debug"
    volumes:
      - ..:/app
      - media:/app/media
      - static:/app/static
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=${DEBUG}
    depends_on:
      - db
      - celery

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    working_dir: /app
    command: >
      bash -lc "
        celery -A ScheduleManager.celery worker --loglevel=debug &
        celery -A ScheduleManager.celery beat --loglevel=debug &
        wait -n"
    volumes:
      - ..:/app
    depends_on:
      - redis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=${DEBUG}

  nginx:
    image: nginx:1.25.3-alpine3.18
    ports:
      - "80:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.dev.conf
      - static:/app/static
      - media:/app/media
    depends_on:
      - web

volumes:
  db_data:
  media:
  static:
