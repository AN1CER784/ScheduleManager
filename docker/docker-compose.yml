services:
  db:
    image: postgres:17.5-alpine3.21
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  redis:
    image: redis:8.0-alpine3.21
    restart: always
    command: redis-server --save 120 1 --loglevel warning
    volumes:
      - ../cache:/data
  web:
    command: >
      /bin/bash -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      sleep infinity"
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ..:/app
    ports:
      - "8000-8010:8000-8010"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
      - redis
      - celery
  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    working_dir: /app
    volumes:
      - ..:/app
    depends_on:
      - redis
    user: "nobody:nogroup"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    command: >
      bash -lc "
        celery -A ScheduleManager worker \
          -l info &
      
        celery -A ScheduleManager beat \
          -l info \
          --scheduler django_celery_beat.schedulers:DatabaseScheduler &
      
        wait -n
      "


volumes:
  db_data:


